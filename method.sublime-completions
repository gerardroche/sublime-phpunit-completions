{
    // scope:
    //
    // source.php meta.function-call-object
    // source.php variable.other.property

    "scope": "source.php meta.function-call-object, source.php variable.other.property",
    "completions": [
        {"trigger":"any","contents":"any();"},
        {"trigger":"anything","contents":"anything();"},
        {"trigger":"arrayHasKey","contents":"arrayHasKey(${1:key});"},
        {"trigger":"assertArrayHasKey","contents":"assertArrayHasKey(${1:key}, ${2:array});"},
        {"trigger":"assertArrayNotHasKey","contents":"assertArrayNotHasKey(${1:key}, ${2:array});"},
        {"trigger":"assertArraySubset","contents":"assertArraySubset(${1:subset}, ${2:array});"},
        {"trigger":"assertAttributeContains","contents":"assertAttributeContains(${1:needle}, ${2:haystackAttributeName}, ${3:haystackClassOrObject});"},
        {"trigger":"assertAttributeContainsOnly","contents":"assertAttributeContainsOnly(${1:type}, ${2:haystackAttributeName}, ${3:haystackClassOrObject});"},
        {"trigger":"assertAttributeCount","contents":"assertAttributeCount(${1:expectedCount}, ${2:haystackAttributeName}, ${3:haystackClassOrObject});"},
        {"trigger":"assertAttributeEmpty","contents":"assertAttributeEmpty(${1:haystackAttributeName}, ${2:haystackClassOrObject});"},
        {"trigger":"assertAttributeEquals","contents":"assertAttributeEquals(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeGreaterThan","contents":"assertAttributeGreaterThan(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeGreaterThanOrEqual","contents":"assertAttributeGreaterThanOrEqual(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeInstanceOf","contents":"assertAttributeInstanceOf(${1:expected}, ${2:attributeName}, ${3:classOrObject});"},
        {"trigger":"assertAttributeInternalType","contents":"assertAttributeInternalType(${1:expected}, ${2:attributeName}, ${3:classOrObject});"},
        {"trigger":"assertAttributeLessThan","contents":"assertAttributeLessThan(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeLessThanOrEqual","contents":"assertAttributeLessThanOrEqual(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeNotContains","contents":"assertAttributeNotContains(${1:needle}, ${2:haystackAttributeName}, ${3:haystackClassOrObject});"},
        {"trigger":"assertAttributeNotContainsOnly","contents":"assertAttributeNotContainsOnly(${1:type}, ${2:haystackAttributeName}, ${3:haystackClassOrObject});"},
        {"trigger":"assertAttributeNotCount","contents":"assertAttributeNotCount(${1:expectedCount}, ${2:haystackAttributeName}, ${3:haystackClassOrObject});"},
        {"trigger":"assertAttributeNotEmpty","contents":"assertAttributeNotEmpty(${1:haystackAttributeName}, ${2:haystackClassOrObject});"},
        {"trigger":"assertAttributeNotEquals","contents":"assertAttributeNotEquals(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeNotInstanceOf","contents":"assertAttributeNotInstanceOf(${1:expected}, ${2:attributeName}, ${3:classOrObject});"},
        {"trigger":"assertAttributeNotInternalType","contents":"assertAttributeNotInternalType(${1:expected}, ${2:attributeName}, ${3:classOrObject});"},
        {"trigger":"assertAttributeNotSame","contents":"assertAttributeNotSame(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertAttributeSame","contents":"assertAttributeSame(${1:expected}, ${2:actualAttributeName}, ${3:actualClassOrObject});"},
        {"trigger":"assertClassHasAttribute","contents":"assertClassHasAttribute(${1:attributeName}, ${2:className});"},
        {"trigger":"assertClassHasStaticAttribute","contents":"assertClassHasStaticAttribute(${1:attributeName}, ${2:className});"},
        {"trigger":"assertClassNotHasAttribute","contents":"assertClassNotHasAttribute(${1:attributeName}, ${2:className});"},
        {"trigger":"assertClassNotHasStaticAttribute","contents":"assertClassNotHasStaticAttribute(${1:attributeName}, ${2:className});"},
        {"trigger":"assertContains","contents":"assertContains(${1:needle}, ${2:haystack});"},
        {"trigger":"assertContainsOnly","contents":"assertContainsOnly(${1:type}, ${2:haystack});"},
        {"trigger":"assertContainsOnlyInstancesOf","contents":"assertContainsOnlyInstancesOf(${1:classname}, ${2:haystack});"},
        {"trigger":"assertCount","contents":"assertCount(${1:expectedCount}, ${2:haystack});"},
        {"trigger":"assertDataSetsEqual","contents":"assertDataSetsEqual(${1:expected}, ${2:actual});"},
        {"trigger":"assertEmpty","contents":"assertEmpty(${1:actual});"},
        {"trigger":"assertEquals","contents":"assertEquals(${1:expected}, ${2:actual});"},
        {"trigger":"assertEqualXMLStructure","contents":"assertEqualXMLStructure(${1:expectedElement}, ${2:actualElement});"},
        {"trigger":"assertFalse","contents":"assertFalse(${1:condition});"},
        {"trigger":"assertFileEquals","contents":"assertFileEquals(${1:expected}, ${2:actual});"},
        {"trigger":"assertFileExists","contents":"assertFileExists(${1:filename});"},
        {"trigger":"assertFileNotEquals","contents":"assertFileNotEquals(${1:expected}, ${2:actual});"},
        {"trigger":"assertFileNotExists","contents":"assertFileNotExists(${1:filename});"},
        {"trigger":"assertFinite","contents":"assertFinite(${1:actual});"},
        {"trigger":"assertGreaterThan","contents":"assertGreaterThan(${1:expected}, ${2:actual});"},
        {"trigger":"assertGreaterThanOrEqual","contents":"assertGreaterThanOrEqual(${1:expected}, ${2:actual});"},
        {"trigger":"assertInfinite","contents":"assertInfinite(${1:actual});"},
        {"trigger":"assertInstanceOf","contents":"assertInstanceOf(${1:expected}, ${2:actual});"},
        {"trigger":"assertInternalType","contents":"assertInternalType(${1:expected}, ${2:actual});"},
        {"trigger":"assertJson","contents":"assertJson(${1:actualJson});"},
        {"trigger":"assertJsonFileEqualsJsonFile","contents":"assertJsonFileEqualsJsonFile(${1:expectedFile}, ${2:actualFile});"},
        {"trigger":"assertJsonFileNotEqualsJsonFile","contents":"assertJsonFileNotEqualsJsonFile(${1:expectedFile}, ${2:actualFile});"},
        {"trigger":"assertJsonStringEqualsJsonFile","contents":"assertJsonStringEqualsJsonFile(${1:expectedFile}, ${2:actualJson});"},
        {"trigger":"assertJsonStringEqualsJsonString","contents":"assertJsonStringEqualsJsonString(${1:expectedJson}, ${2:actualJson});"},
        {"trigger":"assertJsonStringNotEqualsJsonFile","contents":"assertJsonStringNotEqualsJsonFile(${1:expectedFile}, ${2:actualJson});"},
        {"trigger":"assertJsonStringNotEqualsJsonString","contents":"assertJsonStringNotEqualsJsonString(${1:expectedJson}, ${2:actualJson});"},
        {"trigger":"assertLessThan","contents":"assertLessThan(${1:expected}, ${2:actual});"},
        {"trigger":"assertLessThanOrEqual","contents":"assertLessThanOrEqual(${1:expected}, ${2:actual});"},
        {"trigger":"assertNan","contents":"assertNan(${1:actual});"},
        {"trigger":"assertNotContains","contents":"assertNotContains(${1:needle}, ${2:haystack});"},
        {"trigger":"assertNotContainsOnly","contents":"assertNotContainsOnly(${1:type}, ${2:haystack});"},
        {"trigger":"assertNotCount","contents":"assertNotCount(${1:expectedCount}, ${2:haystack});"},
        {"trigger":"assertNotEmpty","contents":"assertNotEmpty(${1:actual});"},
        {"trigger":"assertNotEquals","contents":"assertNotEquals(${1:expected}, ${2:actual});"},
        {"trigger":"assertNotFalse","contents":"assertNotFalse(${1:condition});"},
        {"trigger":"assertNotInstanceOf","contents":"assertNotInstanceOf(${1:expected}, ${2:actual});"},
        {"trigger":"assertNotInternalType","contents":"assertNotInternalType(${1:expected}, ${2:actual});"},
        {"trigger":"assertNotNull","contents":"assertNotNull(${1:actual});"},
        {"trigger":"assertNotRegExp","contents":"assertNotRegExp(${1:pattern}, ${2:string});"},
        {"trigger":"assertNotSame","contents":"assertNotSame(${1:expected}, ${2:actual});"},
        {"trigger":"assertNotSameSize","contents":"assertNotSameSize(${1:expected}, ${2:actual});"},
        {"trigger":"assertNotTrue","contents":"assertNotTrue(${1:condition});"},
        {"trigger":"assertNull","contents":"assertNull(${1:actual});"},
        {"trigger":"assertObjectHasAttribute","contents":"assertObjectHasAttribute(${1:attributeName}, ${2:object});"},
        {"trigger":"assertObjectNotHasAttribute","contents":"assertObjectNotHasAttribute(${1:attributeName}, ${2:object});"},
        {"trigger":"assertRegExp","contents":"assertRegExp(${1:pattern}, ${2:string});"},
        {"trigger":"assertSame","contents":"assertSame(${1:expected}, ${2:actual});"},
        {"trigger":"assertSameSize","contents":"assertSameSize(${1:expected}, ${2:actual});"},
        {"trigger":"assertStringEndsNotWith","contents":"assertStringEndsNotWith(${1:suffix}, ${2:string});"},
        {"trigger":"assertStringEndsWith","contents":"assertStringEndsWith(${1:suffix}, ${2:string});"},
        {"trigger":"assertStringEqualsFile","contents":"assertStringEqualsFile(${1:expectedFile}, ${2:actualString});"},
        {"trigger":"assertStringMatchesFormat","contents":"assertStringMatchesFormat(${1:format}, ${2:string});"},
        {"trigger":"assertStringMatchesFormatFile","contents":"assertStringMatchesFormatFile(${1:formatFile}, ${2:string});"},
        {"trigger":"assertStringNotEqualsFile","contents":"assertStringNotEqualsFile(${1:expectedFile}, ${2:actualString});"},
        {"trigger":"assertStringNotMatchesFormat","contents":"assertStringNotMatchesFormat(${1:format}, ${2:string});"},
        {"trigger":"assertStringNotMatchesFormatFile","contents":"assertStringNotMatchesFormatFile(${1:formatFile}, ${2:string});"},
        {"trigger":"assertStringStartsNotWith","contents":"assertStringStartsNotWith(${1:prefix}, ${2:string});"},
        {"trigger":"assertStringStartsWith","contents":"assertStringStartsWith(${1:prefix}, ${2:string});"},
        {"trigger":"assertTableContains","contents":"assertTableContains(${1:(array) expectedRow}, ${2:table});"},
        {"trigger":"assertTableRowCount","contents":"assertTableRowCount(${1:tableName}, ${2:expected});"},
        {"trigger":"assertTablesEqual","contents":"assertTablesEqual(${1:expected}, ${2:actual});"},
        {"trigger":"assertThat","contents":"assertThat(${1:value}, ${2:constraint});"},
        {"trigger":"assertTrue","contents":"assertTrue(${1:condition});"},
        {"trigger":"assertXmlFileEqualsXmlFile","contents":"assertXmlFileEqualsXmlFile(${1:expectedFile}, ${2:actualFile});"},
        {"trigger":"assertXmlFileNotEqualsXmlFile","contents":"assertXmlFileNotEqualsXmlFile(${1:expectedFile}, ${2:actualFile});"},
        {"trigger":"assertXmlStringEqualsXmlFile","contents":"assertXmlStringEqualsXmlFile(${1:expectedFile}, ${2:actualXml});"},
        {"trigger":"assertXmlStringEqualsXmlString","contents":"assertXmlStringEqualsXmlString(${1:expectedXml}, ${2:actualXml});"},
        {"trigger":"assertXmlStringNotEqualsXmlFile","contents":"assertXmlStringNotEqualsXmlFile(${1:expectedFile}, ${2:actualXml});"},
        {"trigger":"assertXmlStringNotEqualsXmlString","contents":"assertXmlStringNotEqualsXmlString(${1:expectedXml}, ${2:actualXml});"},
        {"trigger":"at","contents":"at(${1:index});"},
        {"trigger":"atLeast","contents":"atLeast(${1:requiredInvocations});"},
        {"trigger":"atLeastOnce","contents":"atLeastOnce();"},
        {"trigger":"atMost","contents":"atMost(${1:allowedInvocations});"},
        {"trigger":"attribute","contents":"attribute(${1:constraint}, ${2:attributeName});"},
        {"trigger":"attributeEqualTo","contents":"attributeEqualTo(${1:attributeName}, ${2:value});"},
        {"trigger":"callback","contents":"callback(${1:callback});"},
        {"trigger":"classHasAttribute","contents":"classHasAttribute(${1:attributeName});"},
        {"trigger":"classHasStaticAttribute","contents":"classHasStaticAttribute(${1:attributeName});"},
        {"trigger":"closeConnection","contents":"closeConnection(${1:connection});"},
        {"trigger":"contains","contents":"contains(${1:value});"},
        {"trigger":"containsOnly","contents":"containsOnly(${1:type});"},
        {"trigger":"containsOnlyInstancesOf","contents":"containsOnlyInstancesOf(${1:classname});"},
        {"trigger":"countOf","contents":"countOf(${1:count});"},
        {"trigger":"createArrayDataSet","contents":"createArrayDataSet(${1:(array) data});"},
        {"trigger":"createDefaultDBConnection","contents":"createDefaultDBConnection(${1:connection});"},
        {"trigger":"createFlatXMLDataSet","contents":"createFlatXMLDataSet(${1:xmlFile});"},
        {"trigger":"createMySQLXMLDataSet","contents":"createMySQLXMLDataSet(${1:xmlFile});"},
        {"trigger":"createXMLDataSet","contents":"createXMLDataSet(${1:xmlFile});"},
        {"trigger":"equalTo","contents":"equalTo(${1:value});"},
        {"trigger":"exactly","contents":"exactly(${1:count});"},
        {"trigger":"expectException","contents":"expectException(${1:exception});"},
        {"trigger":"expectExceptionCode","contents":"expectExceptionCode(${1:code});"},
        {"trigger":"expectExceptionMessage","contents":"expectExceptionMessage(${1:message});"},
        {"trigger":"expectExceptionMessageRegExp","contents":"expectExceptionMessageRegExp(${1:messageRegExp});"},
        {"trigger":"expectOutputRegex","contents":"expectOutputRegex(${1:expectedRegex});"},
        {"trigger":"expectOutputString","contents":"expectOutputString(${1:expectedString});"},
        {"trigger":"fail","contents":"fail($1);"},
        {"trigger":"fileExists","contents":"fileExists();"},
        {"trigger":"getConnection","contents":"getConnection();"},
        {"trigger":"getDatabaseTester","contents":"getDatabaseTester();"},
        {"trigger":"getDataSet","contents":"getDataSet();"},
        {"trigger":"getExpectedException","contents":"getExpectedException();"},
        {"trigger":"getMock","contents":"getMock(${1:originalClassName});"},
        {"trigger":"getMockBuilder","contents":"getMockBuilder(${1:className});"},
        {"trigger":"getMockClass","contents":"getMockClass(${1:originalClassName});"},
        {"trigger":"getMockForAbstractClass","contents":"getMockForAbstractClass(${1:originalClassName});"},
        {"trigger":"getMockForTrait","contents":"getMockForTrait(${1:traitName});"},
        {"trigger":"getMockFromWsdl","contents":"getMockFromWsdl(${1:wsdlFile});"},
        {"trigger":"getMockObjectGenerator","contents":"getMockObjectGenerator();"},
        {"trigger":"getMockWithoutInvokingTheOriginalConstructor","contents":"getMockWithoutInvokingTheOriginalConstructor(${1:originalClassName});"},
        {"trigger":"getObjectAttribute","contents":"getObjectAttribute(${1:object}, ${2:attributeName});"},
        {"trigger":"getOperations","contents":"getOperations();"},
        {"trigger":"getSetUpOperation","contents":"getSetUpOperation();"},
        {"trigger":"getStaticAttribute","contents":"getStaticAttribute(${1:className}, ${2:attributeName});"},
        {"trigger":"getTearDownOperation","contents":"getTearDownOperation();"},
        {"trigger":"greaterThan","contents":"greaterThan(${1:value});"},
        {"trigger":"greaterThanOrEqual","contents":"greaterThanOrEqual(${1:value});"},
        {"trigger":"identicalTo","contents":"identicalTo(${1:value});"},
        {"trigger":"isEmpty","contents":"isEmpty();"},
        {"trigger":"isFalse","contents":"isFalse();"},
        {"trigger":"isFinite","contents":"isFinite();"},
        {"trigger":"isInfinite","contents":"isInfinite();"},
        {"trigger":"isInIsolation","contents":"isInIsolation();"},
        {"trigger":"isInstanceOf","contents":"isInstanceOf(${1:className});"},
        {"trigger":"isJson","contents":"isJson();"},
        {"trigger":"isLarge","contents":"isLarge();"},
        {"trigger":"isMedium","contents":"isMedium();"},
        {"trigger":"isNan","contents":"isNan();"},
        {"trigger":"isNull","contents":"isNull();"},
        {"trigger":"isSmall","contents":"isSmall();"},
        {"trigger":"isTrue","contents":"isTrue();"},
        {"trigger":"isType","contents":"isType(${1:type});"},
        {"trigger":"lessThan","contents":"lessThan(${1:value});"},
        {"trigger":"lessThanOrEqual","contents":"lessThanOrEqual(${1:value});"},
        {"trigger":"logicalAnd","contents":"logicalAnd();"},
        {"trigger":"logicalNot","contents":"logicalNot(${1:constraint});"},
        {"trigger":"logicalOr","contents":"logicalOr();"},
        {"trigger":"logicalXor","contents":"logicalXor();"},
        {"trigger":"markTestIncomplete","contents":"markTestIncomplete($1);"},
        {"trigger":"markTestSkipped","contents":"markTestSkipped($1);"},
        {"trigger":"matches","contents":"matches(${1:string});"},
        {"trigger":"matchesRegularExpression","contents":"matchesRegularExpression(${1:pattern});"},
        {"trigger":"never","contents":"never();"},
        {"trigger":"newDatabaseTester","contents":"newDatabaseTester();"},
        {"trigger":"objectHasAttribute","contents":"objectHasAttribute(${1:attributeName});"},
        {"trigger":"once","contents":"once();"},
        {"trigger":"onConsecutiveCalls","contents":"onConsecutiveCalls();"},
        {"trigger":"readAttribute","contents":"readAttribute(${1:classOrObject}, ${2:attributeName});"},
        {"trigger":"returnArgument","contents":"returnArgument(${1:argumentIndex});"},
        {"trigger":"returnCallback","contents":"returnCallback(${1:callback});"},
        {"trigger":"returnSelf","contents":"returnSelf();"},
        {"trigger":"returnValue","contents":"returnValue(${1:value});"},
        {"trigger":"returnValueMap","contents":"returnValueMap(${1:(array) valueMap});"},
        {"trigger":"setExpectedException","contents":"setExpectedException(${1:exception});"},
        {"trigger":"setExpectedExceptionFromAnnotation","contents":"setExpectedExceptionFromAnnotation();"},
        {"trigger":"setExpectedExceptionRegExp","contents":"setExpectedExceptionRegExp(${1:exception});"},
        {"trigger":"setOutputCallback","contents":"setOutputCallback(${1:callback});"},
        {"trigger":"setUseErrorHandler","contents":"setUseErrorHandler(${1:useErrorHandler});"},
        {"trigger":"setUseErrorHandlerFromAnnotation","contents":"setUseErrorHandlerFromAnnotation();"},
        {"trigger":"stringContains","contents":"stringContains(${1:string});"},
        {"trigger":"stringEndsWith","contents":"stringEndsWith(${1:suffix});"},
        {"trigger":"stringStartsWith","contents":"stringStartsWith(${1:prefix});"},
        {"trigger":"throwException","contents":"throwException(${1:exception});"}
    ]
}
